import { useEffect, useState } from 'react';
import { getCurrentUser } from '../../../services/authService';
import { Link , useNavigate} from 'react-router-dom';

export default function ProfilePage() {
  const [user, setUser] = useState(null);
  const BASE_URL = import.meta.env.VITE_API_URL;
  const navigate = useNavigate();
  const authMethodMap = {
    local: '·ª®ng d·ª•ng',
    google: 'B√™n th·ª© 3 (Google)',
    facebook: 'B√™n th·ª© 3 (Facebook)',
    github: 'B√™n th·ª© 3 (GitHub)'
  };

  const roleMap = {
    Admin: "Qu·∫£n tr·ªã vi√™n",
    Author: "Ng∆∞·ªùi s√°ng t·∫°o",
    Reader: "Ng∆∞·ªùi ƒë·ªçc"
  };

  useEffect(() => {
    getCurrentUser().then(setUser).catch(() => setUser(null));
  }, []);

  if (!user) return (
    <p className="text-center text-gray-400 mt-20 italic">
      ƒêang t·∫£i th√¥ng tin ng∆∞·ªùi d√πng...
    </p>
  );

  return (
    <div className="min-h-[80vh] mt-16 mx-auto px-6 py-10 text-gray-100 max-w-3xl">
      {/* N√∫t quay l·∫°i */}
      <button
        onClick={() => navigate(-1)}
        className="mb-6 px-4 py-2 rounded-md border border-gray-600 hover:bg-gray-800 
                   transition text-sm font-medium flex"
      >
        ‚¨ÖÔ∏è Quay l·∫°i
      </button>
      {/* Title */}
      <h2 className="text-3xl font-extrabold mb-10 text-center tracking-wide">
        H·ªì s∆° c√° nh√¢n
      </h2>

      {/* Avatar + Bio */}
      <div className="flex flex-col items-center gap-4 mb-12">
        <div className="relative">
          <img
            src={BASE_URL + user.avatarUrl}
            alt="avatar"
            className="w-36 h-36 rounded-full object-cover border border-gray-500 shadow-lg"
          />
          <span className="absolute bottom-2 right-2 w-4 h-4 rounded-full border-2 border-gray-900
                          bg-green-500"></span>
        </div>
        <p className="italic text-gray-400 text-center text-sm max-w-md">
          Ti·ªÉu s·ª≠: {user.bio || 'Ch∆∞a c√≥ ti·ªÉu s·ª≠'}
        </p>
      </div>

      {/* Info */}
      <div className="space-y-3">
        {[
          { label: "üë§ T√™n", value: user.name },
          { label: "üìß Email", value: user.email },
          { label: "üìÖ Ng√†y t·∫°o", value: new Date(user.createdAt).toLocaleDateString() },
          { label: "üîê Ph∆∞∆°ng th·ª©c ƒëƒÉng nh·∫≠p", value: authMethodMap[user.authProvider?.toLowerCase()] || "Kh√¥ng x√°c ƒë·ªãnh" },
          { label: "üé≠ Vai tr√≤", value: roleMap[user.roles] || "Kh√¥ng x√°c ƒë·ªãnh" },
          { label: "‚úÖ Tr·∫°ng th√°i", value: user.isActive ? 'Ho·∫°t ƒë·ªông' : 'Kh√¥ng ho·∫°t ƒë·ªông' }
        ].map((item, idx) => (
          <div key={idx} className="border-b border-gray-700 pb-3">
            <p className="flex justify-between text-sm md:text-base">
              <span className="text-gray-400">{item.label}:</span>
              <span className="font-medium">{item.value}</span>
            </p>
          </div>
        ))}
      </div>

      {/* Actions */}
      <div className="mt-10 flex flex-col sm:flex-row gap-4 justify-center">
        <Link
          to="/update-profile"
          className="px-6 py-2 rounded-md border border-gray-600 hover:bg-gray-800 
                     text-sm font-medium transition"
        >
          ‚úèÔ∏è Ch·ªânh s·ª≠a
        </Link>
        <Link
          to="/profile-posts"
          className="px-6 py-2 rounded-md border border-gray-600 hover:bg-gray-800 
                     text-sm font-medium transition"
        >
          üìÉ B√†i vi·∫øt
        </Link>
      </div>

      {/* Admin Access */}
      {user.roles === 'Admin' && (
        <div className="mt-12 flex justify-center">
          <Link
            to="/admin"
            className="px-8 py-4 rounded-xl border border-gray-700 hover:bg-gray-800 
                       transition text-center shadow-md"
          >
            <p className="text-xl font-semibold">üìÅ Trang qu·∫£n tr·ªã</p>
            <p className="text-gray-400 text-sm mt-1">Qu·∫£n l√Ω to√†n h·ªá th·ªëng</p>
          </Link>
        </div>
      )}
    </div>
  );
}
